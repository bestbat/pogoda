#!/usr/bin/env python3

import argparse
import sys

import lxml.html

import backend.hidmet
import frontend.terminal


EXIT_SUCCESS = 0
EXIT_NO_KNOWN_STATIONS = 1
EXIT_NETWORK_ERROR = 2

STATIONS = {
    'pa': 'Палић',
    'so': 'Сомбор',
    'ns': 'Нови Сад',
    'bk': 'Б. Карловац',
    'lo': 'Лозница',
    'sm': 'С. Митровица',
    'va': 'Ваљево',
    'bg': 'Београд',
    'kg': 'Крагујевац',
    'sp': 'С. Паланка',
    'vg': 'В. Градиште',
    'cv': 'Црни Врх',
    'ne': 'Неготин',
    'zla': 'Златибор',
    'sj': 'Сјеница',
    'po': 'Пожега',
    'kv': 'Краљево',
    'kop': 'Копаоник',
    'ku': 'Куршумлија',
    'cu': 'Ћуприја',
    'ni': 'Ниш',
    'le': 'Лесковац',
    'za': 'Зајечар',
    'di': 'Димитровград'
}


def get_stations_by_abbrs(abbrs):
    return list(map(lambda x: STATIONS[x], abbrs))


def parse_arguments():
    parser = argparse.ArgumentParser()
    parser.add_argument("-l", "--list",
                        help="list all weather stations",
                        action="store_true")
    parser.add_argument("-a", "--all",
                        help="show weather reports from all stations",
                        action="store_true")
    parser.add_argument('station', nargs='*', default=['bg'],
                        help='weather station abbreviation')
    args = parser.parse_args()

    if args.list:
        for abbr in STATIONS:
            print(f"{abbr}\t%s" % STATIONS[abbr])
        sys.exit(EXIT_SUCCESS)

    abbrs = []
    for abbr in args.station:
        if abbr in STATIONS:
            abbrs.append(abbr)
        else:
            print("Unknown weather station: %s" % abbr, file=sys.stderr)
    if len(abbrs) == 0:
        sys.exit(EXIT_NO_KNOWN_STATIONS)

    station_names = STATIONS.values() if args.all \
        else get_stations_by_abbrs(abbrs)
    return station_names


stations = parse_arguments()

# get weather reports (backend)
try:
    hidmet_page = backend.hidmet.get_weather_report_page()
except Exception:
    print("Failed to get web page:", sys.exc_info()[1], file=sys.stderr)
    sys.exit(EXIT_NETWORK_ERROR)

hidmet_dom_tree = lxml.html.fromstring(hidmet_page.content)
date = backend.hidmet.parse_date(hidmet_dom_tree)
reports = backend.hidmet.parse_reports(hidmet_dom_tree, stations)
header = backend.hidmet.HEADER

# render and output weather reports (frontend)
tables = frontend.terminal.render_tables(reports)
print(header)
print(date)
frontend.terminal.output_tables(tables)
