#!/usr/bin/env python3

import argparse
import os
import sys

import lxml.html

import backend.hidmet
import backend.metar
import frontend.terminal


EXIT_SUCCESS = 0
EXIT_UNKNOWN_BACKEND = 1
EXIT_NETWORK_ERROR = 2


def parse_arguments():
    parser = argparse.ArgumentParser(prog='rhmz')
    subparsers = parser.add_subparsers(help='backend selection')

    parser_hidmet = subparsers.add_parser('hidmet', help='hidmet backend')
    parser_hidmet.set_defaults(func=backend.hidmet.parse_args)
    parser_hidmet.add_argument("-l", "--list",
                               help="list all weather stations",
                               action="store_true")
    parser_hidmet.add_argument("-a", "--all",
                               help="show weather reports from all stations",
                               action="store_true")
    parser_hidmet.add_argument('station', nargs='*', default=['bg'],
                               help='weather station abbreviation')

    parser_metar = subparsers.add_parser('metar', help='metar backend')
    parser_metar.set_defaults(func=backend.metar.parse_args)
    parser_metar.add_argument("-l", "--list",
                              help="list all weather stations",
                              action="store_true")
    parser_metar.add_argument("-a", "--all",
                              help="show weather reports from all stations",
                              action="store_true")
    parser_metar.add_argument('station', nargs='*', default=[],
                              help='weather station IATA id')

    args = parser.parse_args()

    return args.func(args) if 'func' in args \
        else ('hidmet', backend.hidmet.get_stations_by_abbrs(['bg']))


selected_backend, stations = parse_arguments()

# get weather reports (backend)
if selected_backend == 'hidmet':
    try:
        hidmet_page = backend.hidmet.get_weather_report_page()
    except Exception:
        print("Failed to get web page:", sys.exc_info()[1], file=sys.stderr)
        sys.exit(EXIT_NETWORK_ERROR)

    hidmet_dom_tree = lxml.html.fromstring(hidmet_page.content)
    date = backend.hidmet.parse_date(hidmet_dom_tree)
    header = backend.hidmet.HEADER + os.linesep + date
    reports = backend.hidmet.parse_reports(hidmet_dom_tree, stations)
elif selected_backend == 'metar':
    response = backend.metar.get_json()
    header = backend.metar.HEADER
    all_reports = backend.metar.parse_json(response.content)
    reports = backend.metar.filter_reports(all_reports, stations)
else:
    print("Unknown backend: %s" % selected_backend, file=sys.stderr)
    sys.exit(EXIT_UNKNOWN_BACKEND)

# render and output weather reports (frontend)
tables = frontend.terminal.render_tables(reports)
print(header)
frontend.terminal.output_tables(tables)
